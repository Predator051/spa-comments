version: '3.8'

services:
    app:
        build:
            context: ./docker/php
        container_name: laravel_app
        volumes:
            - ./:/var/www
        depends_on:
            - mysql
            - redis
        networks:
            - laravel

    reverb:
        build:
            context: ./docker/php
        container_name: laravel_reverb
        volumes:
            - ./:/var/www
        command: php artisan reverb:start --host=0.0.0.0 --port=${REVERB_PORT}
        ports:
            - "${REVERB_PORT}:${REVERB_PORT}"
        depends_on:
            - app
        environment:
            - BROADCAST_CONNECTION=reverb
            - REVERB_APP_ID=${REVERB_APP_ID}
            - REVERB_APP_KEY=${REVERB_APP_KEY}
            - REVERB_APP_SECRET=${REVERB_APP_SECRET}
            - REVERB_HOST=localhost
            - REVERB_PORT=${REVERB_PORT}
            - REVERB_SCHEME=${REVERB_SCHEME}
        networks:
            - laravel

    nginx:
        image: nginx:stable-alpine
        container_name: laravel_nginx
        ports:
            - "${APP_PORT}:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - laravel

    mysql:
        image: mysql:8.0
        container_name: laravel_mysql
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - "${DB_PORT}:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - laravel

    test_mysql:
        image: mysql:8.0
        container_name: laravel_test_mysql
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - "${DB_TEST_PORT}:3306"
        volumes:
            - mysql_data:/var/lib/mysql_test
        networks:
            - laravel

    redis:
        image: redis:alpine
        container_name: laravel_redis
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - laravel

    node:
        image: node:18-alpine
        container_name: laravel_node
        ports:
            - "5173:5173"
        working_dir: /var/www
        volumes:
            - ./:/var/www
        command: sh -c "yarn install && yarn dev && npm i"
        networks:
            - laravel

volumes:
    mysql_data:

networks:
    laravel:
        driver: bridge
